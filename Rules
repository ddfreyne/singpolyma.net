compile '/{notes,articles}/**/*.html' do
	filter :autop
	filter :autolink
	layout '/post.*'
end

compile '/{notes,articles}/**/*.md' do
	filter :kramdown, auto_ids: false
	filter :autolink
	layout '/post.*'
end

compile '/**/*.slim' do
	filter :slim, pretty: true, indent: "\t"
	layout '/default.*'
end

compile '/**/*.md' do
	filter :kramdown, auto_ids: false
	layout '/default.*'
end

compile '/**/*.html' do
	layout '/default.*'
end

compile '/**/*.scss' do
	filter :sass, syntax: :scss, style: :expanded
end

compile '/**/*' do
end

route '/{notes,articles}/**/*' do
	path = item.identifier.components[1..-1]
	article = path.last.start_with?("index.") ? item : @items["/{notes,articles}/#{path[0]}/index.*"]
	path[0] = path[0].to_slug.normalize.sub(/^\d+-/, '').split(/-/)[0..4].join("-")
	path = path.join("/").sub(/index\..*$/, "index.html")

	if article[:ipfs]
		"/ipfs/#{article[:ipfs]}/#{path}"
	else
		"/_ipfs/#{Base64.urlsafe_encode64(article.identifier)}/#{path}"
	end
end

route '/**/*.{slim,html,md}' do
	if item.identifier =~ '/index.*'
		'/index.html'
	else
		item.identifier.without_ext + '/index.html'
	end
end

route '/**/*.scss' do
	item.identifier.without_ext + '.css'
end

route '/**/*' do
	item.identifier.to_s
end

layout '/**/*.slim', :slim, pretty: true, indent: "\t"
